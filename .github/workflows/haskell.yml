name: Haskell CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

env:
  SOLVER_PKG_VERSION: "snapshot-20240212"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        ghc: ["9.4.8"]
        cabal: ["3.10.2.0"]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Install system dependencies
      shell: bash
      run: .github/ci.sh install_system_deps
      env:
        BUILD_TARGET_OS: ${{ matrix.os }}
        BUILD_TARGET_ARCH: ${{ runner.arch }}

    - uses: haskell-actions/setup@v2
      id: setup-haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - uses: actions/cache/restore@v3
      name: Restore cabal store cache
      with:
        path: |
          ${{ steps.setup-haskell.outputs.cabal-store }}
          dist-newstyle
        key: ${{ env.CACHE_VERSION }}-cabal-${{ matrix.os }}-${{ matrix.ghc }}-${{ hashFiles(format('cabal.GHC-{0}.config', matrix.ghc)) }}-${{ github.sha }}
        restore-keys: |
          ${{ env.CACHE_VERSION }}-cabal-${{ matrix.os }}-${{ matrix.ghc }}-${{ hashFiles(format('cabal.GHC-{0}.config', matrix.ghc)) }}-

    - name: Install dependencies
      run: |
        cabal update
        cabal build --only-dependencies --enable-tests
    - name: Build
      run: cabal build --enable-tests all
    - name: Run tests
      run: cabal test all

    - uses: actions/cache/save@v3
      name: Save cabal store cache
      if: always()
      with:
        path: |
          ${{ steps.setup-haskell.outputs.cabal-store }}
          dist-newstyle
        key: ${{ env.CACHE_VERSION }}-cabal-${{ matrix.os }}-${{ matrix.ghc }}-${{ hashFiles(format('cabal.GHC-{0}.config', matrix.ghc)) }}-${{ github.sha }}
